<form class="container" action="/update/user" method="POST">
    <h1 class="text-center">User Details</h1>
    <input type="hidden" name="id" value="{{user._id}}">

    <div class="form-row">
        <div class="col-md-12 mb-3">
            <label for="username">Username: </label>
            <input type="field" class="form-control" id="username" value="{{user.username}}" name="username"
                disabled="true">
            <small>You cannot change your username.</small>
        </div>
    </div>

    <div class="form-row">
        <div class="col-md-6 mb-3">
            <label for="firstName">First name: </label>
            <input type="text" class="form-control" id="firstName" value="{{user.firstName}}" name="firstName">
        </div>

        <div class="col-md-6 mb-3">
            <label for="lastName">Last name: </label>
            <input type="text" class="form-control" id="lastName" value="{{user.lastName}}" name="lastName">
        </div>
    </div>

    <div class="form-row">
        <div class="col-md-12 mb-3">
            <label for="age">Age: </label>
            <input type="age" class="form-control" id="age" value="{{user.age}}" name="age">
        </div>
    </div>

    <div class="form-row">
        <div class="col-md-12 mb-3">
            <label for="email">Email: </label>
            <input type="email" class="form-control" id="email" value="{{user.email}}" name="email">
        </div>
    </div>

    {{!-- <div class="form-row" id="address">

        <h2>Address: </h2>

        <div class="col-md-12 mb-3" id="locationField">
            <input class="form-control" id="autocomplete" placeholder="Enter your address ..." onFocus="geolocate()"
                type="field" />
        </div>

        <div class="col-md-6 mb-3">
            <label for="route">Street route: </label>
            <input type="field" class="form-control" id="route" placeholder="Street route" name="route" disabled="true">
        </div>

        <div class="col-md-6 mb-3">
            <label for="street_number">Street number: </label>
            <input type="field" class="form-control" id="street_number" placeholder="Street number" name="street_number"
                disabled="true">
        </div>

        <div class="col-md-6 mb-3">
            <label for="locality">City: </label>
            <input type="field" class="form-control" id="locality" placeholder="City" name="locality" disabled="true">
        </div>

        <div class="col-md-6 mb-3">
            <label for="administrative_area_level_1">State: </label>
            <input type="field" class="form-control" id="administrative_area_level_1" placeholder="State"
                name="administrative_area_level_1" disabled="true">
        </div>

        <div class="col-md-6 mb-3">
            <label for="postal_code">Zip code: </label>
            <input type="field" class="form-control" id="postal_code" placeholder="Zip code" name="postal_code"
                disabled="true">
        </div>

        <div class="col-md-6 mb-3">
            <label for="country">Country: </label>
            <input type="field" class="form-control" id="country" placeholder="Country" name="country" disabled="true">
        </div>
    </div> --}}

    <a href="/profile" class="btn btn-primary" type="submit">Go Back</a>
    <button class="btn btn-primary" type="submit">Update user</button>
</form>





<script>
    var placeSearch, autocomplete;

    var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
    };

    function initAutocomplete() {
        autocomplete = new google.maps.places.Autocomplete(
            document.getElementById('autocomplete'), { types: ['geocode'] });
        autocomplete.setFields(['address_component']);
        autocomplete.addListener('place_changed', fillInAddress);
    }

    function fillInAddress() {
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
            document.getElementById(component).value = '';
            document.getElementById(component).disabled = false;
        }

        for (var i = 0; i < place.address_components.length; i++) {
            var addressType = place.address_components[i].types[0];
            if (componentForm[addressType]) {
                var val = place.address_components[i][componentForm[addressType]];
                document.getElementById(addressType).value = val;
            }
        }
    }

    function geolocate() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var geolocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                var circle = new google.maps.Circle(
                    { center: geolocation, radius: position.coords.accuracy });
                autocomplete.setBounds(circle.getBounds());
            });
        }
    }
</script>
<script
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBPpLmiojA25PuYuA2hXzQKbVCSl1YEkzo&libraries=places&callback=initAutocomplete"
    async defer></script>